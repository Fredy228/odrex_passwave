version: '3.8'

services:
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: app
    command: bash -c "REACT_APP_SERVER_URL=${REACT_APP_SERVER_URL} && npm i && npm run start"
    ports:
      - "3000:3000"
    volumes:
      - ./app:/app
      - ./app/node_modules:/app/node_modules
    depends_on:
      - server
    env_file:
      - .env

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: server
    ports:
      - "${PORT_SERVER}:${PORT_SERVER}"
    volumes:
      - ./server:/app
      - ./server/node_modules:/app/node_modules
    command: bash -c "npm i && npm run start:dev"
    depends_on:
      - db
    env_file:
      - .env

  db:
    image: mysql/mysql-server:8.0.32
    container_name: db
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./database:/var/lib/mysql
    ports:
      - "${DB_PORT}:3306"
    env_file:
      - .env

  nginx:
    image: nginx:stable
    container_name: nginx
    ports:
      - "80:80"
    env_file:
      - .env
    volumes:
      - ./nginx:/etc/nginx/templates
    depends_on:
      - app
    links:
      - app
    command: >
      bash -c "envsubst '$${PORT_SERVER}' < /etc/nginx/templates/nginx-http.conf > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
